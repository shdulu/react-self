{
    "compilerOptions": {
      "target": "ESNext", // 用于指定编译之后的版本目标
      "lib": ["DOM", "DOM.Iterable", "ESNext"], // 	编译时引入的 ES 功能库，包括：es5 、es6、es7、dom 等。如果未设置，则默认为： target 为 es5 时: ["dom", "es5", "scripthost"] target 为 es6 时: ["dom", "es6", "dom.iterable", "scripthost"]
      "allowJs": true, // 是否允许编译JS文件，默认是false，即不编译JS文件
      "checkJs": false, // 	是否检查和报告JS文件中的错误，默认是false
      // "declaration": false, // 是否在编译的时候生成相应的.d.ts声明文件
      // "declarationDir": "", // 生成的 .d.ts 文件存放路径,默认与 .ts 文件相同
      // "declarationMap": false, // 是否为声明文件.d.ts生成map文件
      "skipLibCheck": false,
      // "noImplicitAny": false, // 不允许默认any类型
      // "strictNullChecks":false, 当设为true时，null和undefined值不能赋值给非这两种类型的值
      // "strictFunctionTypes":false, 是否使用函数参数双向协变检查
      // "strictBindCallApply":false,	是否对bind、call和apply绑定的方法的参数的检测是严格检测的
      // "strictPropertyInitialization": false, 检查类的非undefined属性是否已经在构造函数里初始化
      // "noImplicitThis":false,不允许this表达式的值为any类型的时候
      // "alwaysStrict":false, 指定始终以严格模式检查每个模块
      "sourceMap": false, // 编译时是否生成.map文件
      "esModuleInterop": false,
      "allowSyntheticDefaultImports": true,
      "strict": true, // 是否启动所有类型检查
      // "outFile": "", //是否将输出文件合并为一个文件，值是一个文件路径名，只有设置module的值为amd和system模块时才支持这个配置
      // "outDir":"", // 指定输出文件夹
      // "rootDir": "", // 编译文件的根目录，编译器会在根目录查找入口文件
      // "composite":"", // 是否编译构建引用项目
      // "removeComments":false, 是否将编译后的文件中的注释删掉
      "forceConsistentCasingInFileNames": true,
      "module": "ESNext", // 生成的模块形式：none、commonjs、amd、system、umd、es6、es2015 或 esnext 只有 amd 和 system 能和 outFile 一起使用 target 为 es5 或更低时可用 es6 和 es2015
      "moduleResolution": "Node",
      "resolveJsonModule": true,
      "isolatedModules": true, // 	指定是否将每个文件作为单独的模块，默认为true
      "noEmit": true, // 不生成编译文件
      // "importHelpers":false, // 是否引入tslib里的辅助工具函数
      // "downlevelIteration":false, // 当target为ES5或ES3时，为for-of、spread和destructuring中的迭代器提供完全支持
      "jsx": "react", // 指定jsx代码用于的开发环境 preserve指保留JSX语法,扩展名为.jsx,react-native是指保留jsx语法，扩展名js,react指会编译成ES5语法 详解
      "types": ["react/next", "react-dom/next"]
    },
    "include": ["./src"]
  }